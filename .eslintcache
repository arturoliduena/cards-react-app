[{"/Users/artur/Development/tests/cards-react-app/src/index.tsx":"1","/Users/artur/Development/tests/cards-react-app/src/reportWebVitals.ts":"2","/Users/artur/Development/tests/cards-react-app/src/App.tsx":"3","/Users/artur/Development/tests/cards-react-app/src/components/Modal.tsx":"4","/Users/artur/Development/tests/cards-react-app/src/components/Header.tsx":"5","/Users/artur/Development/tests/cards-react-app/src/components/Button.tsx":"6","/Users/artur/Development/tests/cards-react-app/src/components/Body.tsx":"7","/Users/artur/Development/tests/cards-react-app/src/components/Card.tsx":"8","/Users/artur/Development/tests/cards-react-app/src/components/Input.tsx":"9","/Users/artur/Development/tests/cards-react-app/src/store/index.ts":"10","/Users/artur/Development/tests/cards-react-app/src/store/actionTypes.ts":"11","/Users/artur/Development/tests/cards-react-app/src/store/reducers.ts":"12","/Users/artur/Development/tests/cards-react-app/src/store/actions.ts":"13","/Users/artur/Development/tests/cards-react-app/src/localStorage.ts":"14","/Users/artur/Development/tests/cards-react-app/src/types.ts":"15","/Users/artur/Development/tests/cards-react-app/src/store/util.ts":"16","/Users/artur/Development/tests/cards-react-app/src/components/Dropdown.tsx":"17"},{"size":614,"mtime":1607087470196,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1606928363972,"results":"20","hashOfConfig":"19"},{"size":599,"mtime":1607293932252,"results":"21","hashOfConfig":"19"},{"size":2751,"mtime":1607218090308,"results":"22","hashOfConfig":"19"},{"size":685,"mtime":1607294961579,"results":"23","hashOfConfig":"19"},{"size":315,"mtime":1607029831750,"results":"24","hashOfConfig":"19"},{"size":427,"mtime":1607291463150,"results":"25","hashOfConfig":"19"},{"size":1350,"mtime":1607166565970,"results":"26","hashOfConfig":"19"},{"size":1361,"mtime":1607099003457,"results":"27","hashOfConfig":"19"},{"size":643,"mtime":1607260657881,"results":"28","hashOfConfig":"19"},{"size":1027,"mtime":1607280654929,"results":"29","hashOfConfig":"19"},{"size":1590,"mtime":1607280283865,"results":"30","hashOfConfig":"19"},{"size":932,"mtime":1607217446833,"results":"31","hashOfConfig":"19"},{"size":460,"mtime":1607213441678,"results":"32","hashOfConfig":"19"},{"size":240,"mtime":1607218066438,"results":"33","hashOfConfig":"19"},{"size":938,"mtime":1607245651144,"results":"34","hashOfConfig":"19"},{"size":1174,"mtime":1607295622957,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1pndyll",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/artur/Development/tests/cards-react-app/src/index.tsx",[],["74","75"],"/Users/artur/Development/tests/cards-react-app/src/reportWebVitals.ts",[],"/Users/artur/Development/tests/cards-react-app/src/App.tsx",[],"/Users/artur/Development/tests/cards-react-app/src/components/Modal.tsx",["76"],"import React, { useState, useEffect } from 'react';\nimport styles from './Modal.module.css';\nimport Input from './Input';\nimport Button from './Button';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../store';\nimport { addCard, editCard,closeModal } from '../store/actions';\nimport notFound from '../notFound.jpeg';\nimport { ICard } from '../types';\n\ninterface Props {\n  modalEl: React.RefObject<HTMLDivElement>\n}\nconst Modal = ({ modalEl }: Props) => {\n  const [id, setId] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [img, setImg] = useState('');\n  const [created_at, setICreatedAt] = useState(0);\n  const [isNewItem, setIsNewItem] = useState(true);\n  const [checkFields, setCheckFields] = useState(false);\n  const dispatch = useDispatch();\n  const itemToEdit = useSelector((state: RootState) => state.modal.itemToEdit);\n\n  useEffect(() => {\n    if(itemToEdit){\n      setId(itemToEdit.id);\n      setTitle(itemToEdit.title);\n      setDescription(itemToEdit.description);\n      setImg(itemToEdit.img);\n      setICreatedAt(itemToEdit.created_at);\n      setIsNewItem(false);\n    }\n  }, [])\n  const validateFields = (fields: string[]) => !fields.some(field => !field);\n\n  const defaultImg = (event: React.ChangeEvent<HTMLImageElement>) => {\n    event.target.src = notFound\n  };\n\n  const onClose = () => {\n    dispatch(closeModal())\n  }\n\n  const submit = () => { \n    const isValid = validateFields([title, description, img]);\n    if(isValid){\n      const item: ICard = {\n        id,\n        title,\n        description,\n        img,\n        created_at,\n      }\n      dispatch(isNewItem ? addCard(item) : editCard(item));\n      onClose();\n    } else {\n      setCheckFields(true);\n    }\n  }\n  return (\n    <div id=\"myModal\" className={styles.modal} ref={modalEl}>\n      <div className={styles.modal_content}>\n        <div className={styles.modal_header}>\n          <span className={styles.close} onClick={onClose}>&times;</span>\n          <h2>New Card</h2>\n        </div>\n        <div className={styles.modal_body}>\n          <form className={styles.container}>\n            <Input label='Title' type='input' value={title} onChange={setTitle} checkFields={checkFields}/>\n            <Input label='Description' type='textarea' value={description} onChange={setDescription} checkFields={checkFields}/>\n            <Input label='Image (URL)' type='input' value={img} onChange={setImg} checkFields={checkFields}/>\n      <img className={styles.img} src={img} alt='' onError={defaultImg} />\n\n          </form>\n            <Button onClick={submit} text={isNewItem ? 'add' : 'edit'} />\n        </div>\n      </div>\n\n    </div>\n  )\n};\n\nexport default Modal;","/Users/artur/Development/tests/cards-react-app/src/components/Header.tsx",["77"],"import React from 'react';\nimport styles from './Header.module.css';\nimport Button from './Button';\nimport { useDispatch } from 'react-redux'\nimport { openModal, sortCard } from '../store/actions';\nimport { OrderBy, Order } from '../types';\nimport Dropdown from './Dropdown';\n\ninterface Props {\n}\nconst Header = (props: Props) => {\n  const dispatch = useDispatch();\n\n  const onclick = () => {\n    dispatch(openModal(null))\n  }\n\n  const sort = (orderBy: OrderBy, order: Order) => {\n    dispatch(sortCard(orderBy, order))\n  }\n\n  return (\n    <header className={styles.header}>\n      <Button onClick={onclick} text='&#43;'/>\n      <Dropdown />\n    </header>\n  )\n};\n\nexport default Header;","/Users/artur/Development/tests/cards-react-app/src/components/Button.tsx",[],"/Users/artur/Development/tests/cards-react-app/src/components/Body.tsx",[],"/Users/artur/Development/tests/cards-react-app/src/components/Card.tsx",[],"/Users/artur/Development/tests/cards-react-app/src/components/Input.tsx",["78"],"import React, { useState, useEffect } from 'react';\nimport styles from './Input.module.css';\n\ninterface Props {\n\tlabel: string\n\tvalue: string\n\tonChange: (value: string) => void\n\ttype: 'input' | 'textarea'\n\tcheckFields: boolean\n}\nconst Input = (props: Props) => {\n\tconst [error, setError] = useState('')\n\tconst { label, value, onChange, type, checkFields } = props;\n\n\tuseEffect(() => {\n\t\tif(checkFields){\n\t\t\tsetError(!value ? 'this field is required' : '')\n\t\t}\n\t}, [checkFields])\n\tconst onChangeValue = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tonChange(event.target.value)\n\t};\n\n\tconst handleBlur = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tsetError(!e.target.value ? 'this field is required' : '')\n\t};\n\n\treturn (\n\t\t<div className={styles.input_group}>\n\t\t\t<label className={`${styles.input_underlined} ${error ? styles.input_error : ''}`}>\n\t\t\t\t{\n\t\t\t\t\ttype === 'textarea' ?\n\t\t\t\t\t\t<textarea required className={styles.input} rows={4} cols={50} value={value} onChange={onChangeValue} onBlur={handleBlur}/> :\n\t\t\t\t\t\t<input required className={styles.input} value={value} onChange={onChangeValue} onBlur={handleBlur}/>\n\t\t\t\t}\n\t\t\t\t<span className={styles.input_label}>{label}</span>\n\t\t\t\t{\n\t\t\t\t\terror && <span className={styles.input_helper}>{error}</span>\n\t\t\t\t}\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\nexport default Input;","/Users/artur/Development/tests/cards-react-app/src/store/index.ts",[],"/Users/artur/Development/tests/cards-react-app/src/store/actionTypes.ts",[],"/Users/artur/Development/tests/cards-react-app/src/store/reducers.ts",[],"/Users/artur/Development/tests/cards-react-app/src/store/actions.ts",[],"/Users/artur/Development/tests/cards-react-app/src/localStorage.ts",[],"/Users/artur/Development/tests/cards-react-app/src/types.ts",[],"/Users/artur/Development/tests/cards-react-app/src/store/util.ts",[],"/Users/artur/Development/tests/cards-react-app/src/components/Dropdown.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":34,"column":6,"nodeType":"85","endLine":34,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":9,"nodeType":"89","messageId":"90","endLine":18,"endColumn":13},{"ruleId":"83","severity":1,"message":"91","line":19,"column":5,"nodeType":"85","endLine":19,"endColumn":18,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'itemToEdit'. Either include it or remove the dependency array.","ArrayExpression",["95"],"@typescript-eslint/no-unused-vars","'sort' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [itemToEdit]",{"range":"101","text":"102"},"Update the dependencies array to be: [checkFields, value]",{"range":"103","text":"104"},[1195,1197],"[itemToEdit]",[464,477],"[checkFields, value]"]